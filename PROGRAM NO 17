#include <stdio.h>
#include <stdlib.h>


int* mergeArrays(int* nums1, int m, int* nums2, int n, int* returnSize) {
    int* mergedArray = (int*)malloc((m + n) * sizeof(int));
    int i = 0, j = 0, k = 0;

    while (i < m && j < n) {
        if (nums1[i] < nums2[j]) {
            mergedArray[k++] = nums1[i++];
        } else {
            mergedArray[k++] = nums2[j++];
        }
    }

    while (i < m) {
        mergedArray[k++] = nums1[i++];
    }

    while (j < n) {
        mergedArray[k++] = nums2[j++];
    }

    *returnSize = m + n;
    return mergedArray;
}


int calculateSum(int* arr, int size) {
    int sum = 0;
    for (int i = 0; i < size; i++) {
        sum += arr[i];
    }
    return sum;
}

int main() {
    int nums1[] = {1, 3, 5, 7};
    int m = sizeof(nums1) / sizeof(nums1[0]);

    int nums2[] = {2, 4, 6, 8, 9};
    int n = sizeof(nums2) / sizeof(nums2[0]);

    int returnSize;
    int* mergedArray = mergeArrays(nums1, m, nums2, n, &returnSize);

    int sum = calculateSum(mergedArray, returnSize);
    printf("The sum of the merged array is %d\n", sum);

    free(mergedArray);
    return 0;
}
