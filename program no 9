#include <stdio.h>
#include <stdlib.h>


typedef struct Node {
    int data;
    struct Node* left;
    struct Node* right;
} Node;


Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    if (!newNode) {
        printf("Memory error\n");
        return NULL;
    }
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

void inOrderTraversal(Node* root, int* count, int k, int* result) {
    if (root) {
        inOrderTraversal(root->left, count, k, result);
        (*count)++;
        if (*count == k) {
            *result = root->data;
            return;
        }
        inOrderTraversal(root->right, count, k, result);
    }
}


int findKthSmallest(Node* root, int k) {
    int count = 0;
    int result = -1;
    inOrderTraversal(root, &count, k, &result);
    return result;
}

int main() {
  
    Node* root = createNode(5);
    root->left = createNode(3);
    root->right = createNode(7);
    root->left->left = createNode(2);
    root->left->right = createNode(4);
    root->right->right = createNode(8);

    int k = 3;
    int result = findKthSmallest(root, k);
    printf("The %dth smallest element in the BST is %d\n", k, result);

    return 0;
}
